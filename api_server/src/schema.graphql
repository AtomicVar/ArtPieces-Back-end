scalar Datetime
scalar JSON
scalar UUID
scalar URL

type File {
    filename: String!
    mimetype: String!
    encoding: String!
}

type User {
    email: String
    name: String
    portrait: URL
    artworks: [Artwork]
    repos: [Repo]
}

type Artwork {
    id: UUID
    keyPhoto: URL
    title: String
    description: String
    creator: String
    timestamp: Datetime
    belongingRepo: UUID
}

type Repo {
    id: UUID
    keyArtwork: Artwork
    title: String
    Starter: User
    timestamp: Datetime
    artworks: [Artwork]
}

type Lecture {
    id: UUID
    artwork: Artwork
    title: String
    description: String
    timestamp: Datetime
    creator: User
    numberOfSteps: Int
    steps: JSON
    numberOfStars: Int
}

type Query {
    """
    **Function:** Get the information of an artwork.

    **Explaination:** `UUID` is a string.
    
    **Return:** an `Artwork`.
    """
    getWork(id: UUID!): Artwork

    """
    **Function:** Get the information of an user.

    **Explaination:** None.
    
    **Return:** an `User`.
    """
    getUser(email: String!): User
    
    """
    **Function:** Get the information of a repository.

    **Explaination:** `UUID` is a string.
    
    **Return:** an `Repo`.
    """
    getRepo(id: UUID!): Repo

    """
    **Function:** Get the information of a lecture.

    **Explaination:** `UUID` is a string.
    
    **Return:** an `Lecture`.
    """
    getLecture(id: UUID!): Lecture
}

type Mutation {
    """
    **Function:** Update or insert an user.

    **Explaination:** An update will be executed if there is an old user having the same email. Otherwise a new user will be added.
    
    **Return:** `true` if an insert is executed, `false` for an update.
    """
    upsertUser(email: String!, name: String!, password: String!, portrait: URL): Boolean

    """
    **Function:** Update or insert a work.

    **Explaination:** An update will be executed if there is an old work having the same email. Otherwise a new user will be added.
    
    **Return:** `true` if an insert is executed, `false` for an update.
    """
    upsertWork(creator: String!, keyPhoto: URL!, title: String!, description: String!, belongingRepo: UUID): Boolean
}